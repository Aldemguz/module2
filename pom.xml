<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.1.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<groupId>io.bootcamp</groupId>
	<artifactId>content-filter</artifactId>
	<version>0-SNAPSHOT</version>
	<description>Test module 2 project for Spring Boot</description>

	<properties>
		<!-- Project properties -->
		<product.name>content-filter</product.name>
		<product.description>A project of spring-boot with react-redux</product.description>
		<log.file>/opt/content-filter/logs/app.log</log.file>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>11</java.version>
		<tomcat.version>9.0.27</tomcat.version>

		<!-- Docker properties -->
		<docker.image>content-filter</docker.image>
		<docker.username>${env.DOCKER_USER}</docker.username>
		<docker.password>${env.DOCKER_PASSWORD}</docker.password>
		<docker.nexus.username>${env.DOCKER_NEXUS_USER}</docker.nexus.username>
		<docker.nexus.password>${env.DOCKER_NEXUS_PASSWORD}</docker.nexus.password>
		<docker.repository>${env.DOCKER_REPOSITORY}</docker.repository>
		<java.version>11</java.version>

		<!-- Sonar Properties -->
		<sonar.projectName>${product.name}</sonar.projectName>
		<sonar.projectKey>${project.groupId}:${project.artifactId}</sonar.projectKey>
		<sonar.projectVersion>${project.version}</sonar.projectVersion>
		<sonar.sources>src/main/js,src/main/java</sonar.sources>
		<sonar.javascript.lcov.reportPaths>target/coverage/lcov.info</sonar.javascript.lcov.reportPaths>
		<sonar.coverage.jacoco.xmlReportPaths>target/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
	</properties>

	<distributionManagement>
		<snapshotRepository>
			<id>repo_test</id>
			<url>${env.TEST_SNAPSHOTS_REPOSITORY_URL}</url>
		</snapshotRepository>
		<repository>
		<id>repo_test_releases</id>
			<url>${env.TEST_RELEASES_REPOSITORY_URL}</url>
		</repository>
	</distributionManagement>

	<profiles>
		<!-- Development profile -->
		<profile>
			<id>development</id>
			<properties>
				<webpackMode>-d</webpackMode>
				<webpackFile>webpack.dev.js</webpackFile>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>

		<!-- Production profile -->
		<profile>
			<id>production</id>
			<properties>
				<webpackMode>-p</webpackMode>
				<webpackFile>webpack.prod.js</webpackFile>
			</properties>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator-annotation-processor</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.13.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.7.0.1746</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/*Test.java</include>
					</includes>
					<useSystemClassLoader>false</useSystemClassLoader>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.5</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
 
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.7.6</version>
				<configuration>
					<installDirectory>target</installDirectory>
					<environmentVariables>
						<TEST_REPORT_PATH>${project.build.directory}</TEST_REPORT_PATH>
					</environmentVariables>
				</configuration>
				<executions>
					<execution>
						<id>install-node-and-yarn</id>
						<goals>
							<goal>install-node-and-yarn</goal>
						</goals>
						<configuration>
							<nodeVersion>v10.16.0</nodeVersion>
							<yarnVersion>v1.16.0</yarnVersion>
						</configuration>
					</execution>
					<execution>
						<id>yarn-install</id>
						<goals>
							<goal>yarn</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
					<execution>
						<id>webpack-build</id>
						<goals>
							<goal>webpack</goal>
						</goals>
						<configuration>
							<arguments>--config ${webpackFile} ${webpackMode}
								--env.version=${project.version}</arguments>
						</configuration>
					</execution>
					<execution>
						<id>yarn test</id>
						<phase>test</phase>
						<goals>
							<goal>yarn</goal>
						</goals>
						<configuration>
							<arguments>test</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.33.0</version>
				<configuration>
					<images>
						<image>
							<name>${project.name}</name>
							<registry>${docker.repository}</registry>
							<build>
								<contextDir>${project.basedir}</contextDir>
								<args>
									<JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
								</args>
								<tags>
									<tag>${project.version}</tag>
								</tags>
							</build>
						</image>
					</images>
					<!--<authConfig>
						<username>${docker.username}</username>
						<password>${docker.password}</password>
					</authConfig>-->
				</configuration>
				<executions>
					<execution>
						<id>docker-build</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
					<execution>
						<id>docker-push</id>
						<phase>deploy</phase>
						<goals>
							<goal>push</goal>
						</goals>
						<!--<configuration>
							<authConfig>
								<username>${docker.nexus.username}</username>
								<password>${docker.nexus.password}</password>
							</authConfig>
						</configuration>-->
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
